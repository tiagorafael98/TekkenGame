@model TekkenGame.Models.Comentarios

@{
    ViewBag.Title = "Edit";
}

<style>
    @* imagem de fundo *@
    body {
        background-image: url(../../Fundos/Fundo3.jpg);
    }
    .button {
        display: inline-block;
        padding: 10px 20px;
        font-size: 14px;
        cursor: pointer;
        text-align: center;
        font-family: 'Lucida Console';
        color: black;
        background-color: white;
        border: blue;
        border-radius: 12px;
        border: 2px solid #191970;
    }
        .button:hover {
            background-color: #D3D3D3
        }
        .button:active {
            background-color: #A9A9A9;
            transform: translateY(2px);
        }
</style>

<div style="color:red; font-family:'Lucida Console'; font-size:48px; margin-top:30px;">Editar Comentário</div>


@using (Html.BeginForm())
{
    @Html.AntiForgeryToken()

<div class="form-horizontal" style="color:white; font-family:'Lucida Console'; font-size:15px;">
    <h4>Comentarios</h4>
    <hr />
    @Html.ValidationSummary(true, "", new { @class = "text-danger" })
    @Html.HiddenFor(model => model.ID)

    <div class="form-group">
        @Html.LabelFor(model => model.Texto, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.Texto, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.Texto, "", new { @class = "text-danger" })
        </div>
    </div>

    @*

        <div class="form-group">
            @Html.LabelFor(model => model.DataComentario, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.DataComentario, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.DataComentario, "", new { @class = "text-danger" })
            </div>
        </div>



        <div class="form-group">
            @Html.LabelFor(model => model.JogoFK, "JogoFK", htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.DropDownList("JogoFK", null, htmlAttributes: new { @class = "form-control" })
                @Html.ValidationMessageFor(model => model.JogoFK, "", new { @class = "text-danger" })
            </div>
        </div>



        <div class="form-group">
            @Html.LabelFor(model => model.UtilizadoresFK, "UtilizadoresFK", htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.DropDownList("UtilizadoresFK", null, htmlAttributes: new { @class = "form-control" })
                @Html.ValidationMessageFor(model => model.UtilizadoresFK, "", new { @class = "text-danger" })
            </div>
        </div>

    *@

    <div class="form-group">
        <div class="col-md-offset-2 col-md-10">
            <input type="submit" value="Save" class="btn btn-default" />
            <button type="button" class="button" onclick="location.href='@Url.Action("Details","Jogos",new { id=Model.ID })'">Cancelar</button>
        </div>
    </div>
</div>
}


@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
}
