@model TekkenGame.Models.Jogos
@{
    ViewBag.Title = "Detalhes do jogo";
}
<style>

    body {
        background-image: url(../../Fundos/Fundo3.jpg);
    }

    .button {
        display: inline-block;
        padding: 10px 20px;
        font-size: 14px;
        cursor: pointer;
        text-align: center;
        font-family: 'Lucida Console';
        color: black;
        background-color: white;
        border: blue;
        border-radius: 12px;
        border: 2px solid #191970;
    }

        .button:hover {
            background-color: #D3D3D3
        }

        .button:active {
            background-color: #A9A9A9;
            transform: translateY(2px);
        }
</style>
<div>
    <hr />
    <div style="margin-top: 60px; display: -webkit-flex;">
        @* imagem do jogo *@
        <div style="border:solid; border-color:black;">
            <a href="~/ImagemCapas/@Model.Fotografia" target="_blank">
                <img src="~/ImagemCapas/@Model.Fotografia" width="400" height="487" />
            </a>
        </div>

        <div style="height:400px">
            @* nome do jogo *@
            <div style="color: red; font-family: 'Lucida Console'; text-align: left; font-size:47px; font-weight: bold; margin-top: -10px; margin-left: 20px; width: 100%;">
                @Html.DisplayFor(model => model.Titulo)
            </div>
            @* enredo do jogo *@
            <div style="font-family:'Lucida Console'; font-size:16.5px; color:white; text-align:justify; margin-left:20px;">
                @Html.DisplayFor(model => model.Resumo)
            </div>
            @* plataformas do jogo *@
            <div style="font-family:'Lucida Console';font-size: 25px; color: red; font-weight: bold;padding-top: 16px; margin-left:20px;">Plataformas</div>
            <div style="font-family:'Lucida Console'; font-size: 18px; color: black;text-align:justify; padding-top:2px; margin-left:20px;">
                @if (Model.ListaDePlataformas.Count() > 0)
                {
                foreach (var plataforma in Model.ListaDePlataformas)
                {
                <a href="~/ImagemPlat/@Model.Logotipo" target="_blank">
                    <img src="~/ImagemPlat/@plataforma.Logotipo" width="130" height="100" />
                </a>
                }
                }
            </div>
        </div>
    </div>
</div>
@* personagens do jogo *@
<div style="font-family:Arial;font-size: 30px; color: red; font-weight: bold;padding-top: 56px; margin-left:6px;">Personagens</div>
<div style=" display:flex; flex-wrap:wrap; flex-direction:row; justify-content:space-around; align-content:center; margin-top: -4px;">
    @if (Model.ListaDePersonagens.Count() > 0)
    {
    foreach (var personagem in Model.ListaDePersonagens)
    {
    <div style="padding-top: 15px">
        <a href="~/Personagens/Details/@personagem.ID">
            <img src="~/ImagemPers/@personagem.Fotografia" width="150" height="160" />
        </a>
    </div>
    }
    }
</div>
@* botões de editar a personagem somente para o administrador *@
@if (User.IsInRole("Admin"))
{
<div class="btn-group" role="group" style="margin-bottom:9px; margin-top:20px; padding-left: 855px;">
    <button type="button" class="button" onclick="location.href='@Url.Action(" Edit","Jogos", new { id=Model.ID })'">Editar jogo</button>
    <button type="button" class="button" onclick="location.href='@Url.Action(" Delete","Jogos", new { id=Model.ID })'">Apagar jogo</button>
</div>
}

@* botão para voltar à lista de jogos *@
<div class="btn-group" role="group" style="margin-bottom:9px; padding-top:10px; padding-left: 855px;">
    <button type="button" class="button" onclick="location.href='@Url.Action(" Index","Jogos",new { id=Model.ID })'">Voltar para a lista de Jogos</button>
</div>

<div>
    <div class="text-center" style="margin-top:100px">
        <h1 class="comentarios" style="color: cadetblue">Comentários:</h1>
    </div>
    <hr class="estilo3">
    @if (!User.Identity.IsAuthenticated)
    {
    <div class="alert alert-info" style="margin-top:20px; margin-right:690px">
        <strong>Nota:</strong> Para adicionar um comentário é necessário iniciar sessão!
    </div>
    }

    else
    {
    <div style="margin-top:30px">
        @using (Html.BeginForm("Create", "Comentarios", FormMethod.Post))
        {
        @Html.AntiForgeryToken()
        @Html.Hidden("JogoFK", Model.ID)
        @Html.Hidden("Username", User.Identity.Name)
        @Html.TextArea("Texto", "", 4, 100, htmlAttributes: new { @placeholder = "Adicione um Comentário" })
        <button type="submit" name=" botaoComentario" class="btn btn-primary "> Comentar </button>
        }
    </div>
    }
    @foreach (var comentario in Model.ListaDeComentarios)
    {

    <dt>
        <img src="~/UserFoto/UserFotoM.jpg" width="30" height="30" />
        @Html.DisplayFor(c => comentario.Utilizadores.UserName)
    </dt>

    <dd>
        @Html.DisplayFor(c => comentario.Texto) -
        @Html.DisplayFor(c => comentario.DataComentario)
        @if (User.Identity.Name.Equals(comentario.Utilizadores.UserName) || User.IsInRole("Admin"))
        {
        <a href='@Url.Action("Delete", "Comentarios", new { id = comentario.ID, JogoFK = comentario.JogoFK })'>
            <i class="glyphicon glyphicon-remove-sign" style="color:red;width:50px;height:50px"></i>
        </a>
        <a href='@Url.Action("Edit", "Comentarios", new { id = comentario.ID, JogoFK = comentario.JogoFK })' class="glyphicon  glyphicon-pencil">
        </a>
        }

    </dd>


    }
</div>
